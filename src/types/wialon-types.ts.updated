/**
 * Wialon-related type definitions
 *
 * These types were previously defined in the UI components barrel file
 * but have been moved here to separate concerns and improve code organization.
 */

/**
 * Wialon unit position information
 */
export interface WialonPosition {
  t: number; // Timestamp (Unix time UTC)
  y: number; // Latitude
  x: number; // Longitude
  s: number; // Speed
  c?: number; // Course (direction)
  sc?: number; // Satellites count
}

/**
 * Wialon unit location data (alias for WialonPosition for backward compatibility)
 */
export interface WialonUnitLocation extends WialonPosition {}

/**
 * Wialon sensor information
 */
export interface WialonSensor {
  id: number;
  n: string; // Name
  t: string; // Type
  d: string; // Description
  m: string; // Measurement units
  p: any; // Parameters
  f: number; // Flags
}

/**
 * Wialon unit profile information
 */
export interface WialonUnitProfile {
  vehicle_class?: string;
  brand?: string;
  model?: string;
  year?: string;
  color?: string;
  engine_model?: string;
  registration_plate?: string; // Crucial for display
}

/**
 * Wialon unit information
 */
export interface WialonUnit {
  id: number; // Unique ID (from Wialon)
  name: string; // Unit name (e.g., "24H - AFQ 1325 (Int Sim)")
  uid: string; // Wialon unique ID
  phone?: string;
  hardwareType?: string; // e.g., "Teltonika FMB920"
  iconUrl?: string; // URL for the unit's icon
  lastPosition?: WialonUnitLocation; // Last known position data
  profile: WialonUnitProfile; // Custom profile fields

  // Methods
  getId?: () => number;
  getName?: () => string;
  getPosition?: () => WialonPosition | null;
  getLastMessage?: () => any;
  getSensors?: () => Record<string, WialonSensor>;
  getSensor?: (id: number) => WialonSensor | null;
  calculateSensorValue?: (sensor: WialonSensor, message: any) => number | string;
  getIconUrl?: (size: number) => string;
  addListener?: (event: string, callback: (data: any) => void) => number;
  removeListenerById?: (id: number) => void;
}

/**
 * Wialon resource information
 */
export interface WialonResource {
  id: number;
  name: string;
  type: string;
}

/**
 * Wialon driver information
 */
export interface WialonDriver {
  id: number;
  name: string;
  description?: string;
  phone?: string;
  assignedUnit?: number; // ID of the assigned unit
}

/**
 * Wialon geofence information
 */
export interface WialonGeofence {
  id: number;
  name: string;
  type: 'circle' | 'polygon' | 'line';
  points: Array<{x: number, y: number}>;
  radius?: number; // For circle geofences
}

/**
 * Wialon session information
 */
export interface WialonSession {
  eid: string;
  user: {
    id: number;
    name: string;
  };
  createTime: number;
  lastTime: number;

  // Methods
  initSession: (url: string) => void;
  loginToken: (token: string, callbackUrl: string, callback: (code: number) => void) => void;
  loadLibrary: (name: string) => void;
  updateDataFlags: (
    flags: Array<{
      type: string;
      data: string;
      flags: number;
      mode: number;
    }>,
    callback: (code: number) => void
  ) => void;
  getItems: (type: string) => WialonUnit[];
  getItem: (id: number) => WialonUnit | null;
}
